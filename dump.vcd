$date
	Thu Dec  5 16:10:46 2024
$end
$version
	QuestaSim Version 2021.3_1
$end
$timescale
	1ns
$end

$scope module testbench_tb $end
$var reg 4 ! m [3:0] $end
$var reg 4 " n [3:0] $end
$var reg 4 # sel [3:0] $end
$var reg 1 $ CLK $end
$var reg 1 % RST $end
$var reg 7 & addr [6:0] $end
$var reg 1 ' RW_EN $end
$var reg 8 ( R_data [7:0] $end
$var reg 1 ) DONE $end

$scope module DUT $end
$var reg 4 * m [3:0] $end
$var reg 4 + n [3:0] $end
$var reg 4 , sel [3:0] $end
$var reg 1 - CLK $end
$var reg 1 . RST $end
$var wire 1 / addr [6] $end
$var wire 1 0 addr [5] $end
$var wire 1 1 addr [4] $end
$var wire 1 2 addr [3] $end
$var wire 1 3 addr [2] $end
$var wire 1 4 addr [1] $end
$var wire 1 5 addr [0] $end
$var reg 1 6 RW_EN $end
$var reg 8 7 R_data [7:0] $end
$var wire 1 8 DONE $end
$var reg 8 9 out [7:0] $end
$var reg 1 : ACK $end
$var reg 1 ; SCL $end
$var wire 1 < SDA $end
$var reg 1 = SDA_read $end
$var wire 1 > data [7] $end
$var wire 1 ? data [6] $end
$var wire 1 @ data [5] $end
$var wire 1 A data [4] $end
$var wire 1 B data [3] $end
$var wire 1 C data [2] $end
$var wire 1 D data [1] $end
$var wire 1 E data [0] $end
$var reg 8 F data_read [7:0] $end
$var reg 1 G rw1 $end
$var reg 7 H addr1 [6:0] $end

$scope module funit $end
$var reg 4 I m [3:0] $end
$var reg 4 J n [3:0] $end
$var reg 8 K out [7:0] $end
$var reg 4 L sel [3:0] $end

$scope function operations $end
$var reg 8 M operations [7:0] $end
$var reg 4 N m [3:0] $end
$var reg 4 O n [3:0] $end
$var reg 4 P sel [3:0] $end
$upscope $end
$upscope $end

$scope module i2c $end
$var wire 1 Q CLK $end
$var wire 1 R RST $end
$var wire 1 S ACK $end
$var wire 1 T RW_EN $end
$var wire 1 U out [7] $end
$var wire 1 V out [6] $end
$var wire 1 W out [5] $end
$var wire 1 X out [4] $end
$var wire 1 Y out [3] $end
$var wire 1 Z out [2] $end
$var wire 1 [ out [1] $end
$var wire 1 \ out [0] $end
$var wire 1 / addr [6] $end
$var wire 1 0 addr [5] $end
$var wire 1 1 addr [4] $end
$var wire 1 2 addr [3] $end
$var wire 1 3 addr [2] $end
$var wire 1 4 addr [1] $end
$var wire 1 5 addr [0] $end
$var reg 1 ] SCL $end
$var reg 1 ^ SDA $end
$var reg 1 _ SDA_read $end
$var reg 8 ` R_data [7:0] $end
$var reg 1 a DONE $end
$var reg 1 b SDA_en $end
$var reg 1 c SCL_temp $end
$var reg 1 d SDA_temp $end
$var reg 1 e SDA_temp_read $end
$var reg 8 f R_data_t [7:0] $end
$var reg 8 g addr_temp [7:0] $end
$var integer 32 h i $end
$var integer 32 i STATE $end
$upscope $end

$scope module mem_ctrl $end
$var reg 1 j CLK $end
$var reg 1 k RST $end
$var reg 1 l SCL $end
$var wire 1 < SDA $end
$var wire 1 m SDA_read $end
$var reg 1 n ACK $end
$var reg 7 o addr [6:0] $end
$var wire 1 > data [7] $end
$var wire 1 ? data [6] $end
$var wire 1 @ data [5] $end
$var wire 1 A data [4] $end
$var wire 1 B data [3] $end
$var wire 1 C data [2] $end
$var wire 1 D data [1] $end
$var wire 1 E data [0] $end
$var wire 1 p data_read [7] $end
$var wire 1 q data_read [6] $end
$var wire 1 r data_read [5] $end
$var wire 1 s data_read [4] $end
$var wire 1 t data_read [3] $end
$var wire 1 u data_read [2] $end
$var wire 1 v data_read [1] $end
$var wire 1 w data_read [0] $end
$var reg 1 x RW_EN $end
$var reg 1 y SDA_en $end
$var reg 8 z addrin [7:0] $end
$var reg 8 { datain [7:0] $end
$var reg 8 | temprd [7:0] $end
$var reg 1 } sdar $end
$var integer 32 ~ i $end
$var integer 32 !! STATE $end
$upscope $end

$scope module mem $end
$var reg 1 "! CLK $end
$var reg 1 #! RST $end
$var reg 1 $! RW_EN $end
$var reg 7 %! addr [6:0] $end
$var reg 8 &! data [7:0] $end
$var reg 8 '! data_read [7:0] $end
$var reg 1 (! SDA_en $end
$var reg 8 )! addrin [7:0] $end
$var reg 8 *! data_out [7:0] $end
$var reg 8 +! temprd [7:0] $end
$var reg 1 ,! sdar $end
$var integer 32 -! i $end
$upscope $end
$upscope $end
$upscope $end

$scope begin random_value_pkg $end
$upscope $end

$scope begin std $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
bx !
bx "
bx #
0$
1%
bx &
0'
bx (
0)
bx *
bx +
bx ,
0-
1.
06
bx 7
b0 9
x:
0;
x=
bx F
0G
b0 H
bx I
bx J
b0 K
bx L
b0 M
bx N
bx O
bx P
0]
x^
x_
bx `
0a
xb
0c
0d
xe
bx f
bx g
0j
1k
0l
xn
b0 o
0x
0y
b0 z
bx {
bx |
x}
0"!
1#!
0$!
b0 %!
b0z &!
bx '!
0(!
bx )!
bx *!
bx +!
0,!
b0 h
b0 i
b0 ~
b0 !!
b10000000 -!
x<
zE
0D
0C
0B
0A
0@
0?
0>
x5
x4
x3
x2
x1
x0
x/
08
xw
xv
xu
xt
xs
xr
xq
xp
0\
0[
0Z
0Y
0X
0W
0V
0U
0T
xS
1R
0Q
xm
$end
#12
1$
1-
1j
1"!
1Q
1]
1;
1l
b0 -!
b1 -!
b10 -!
b11 -!
b100 -!
b101 -!
b110 -!
b111 -!
b1000 -!
b1001 -!
b1010 -!
b1011 -!
b1100 -!
b1101 -!
b1110 -!
b1111 -!
b10000 -!
b10001 -!
b10010 -!
b10011 -!
b10100 -!
b10101 -!
b10110 -!
b10111 -!
b11000 -!
b11001 -!
b11010 -!
b11011 -!
b11100 -!
b11101 -!
b11110 -!
b11111 -!
b100000 -!
b100001 -!
b100010 -!
b100011 -!
b100100 -!
b100101 -!
b100110 -!
b100111 -!
b101000 -!
b101001 -!
b101010 -!
b101011 -!
b101100 -!
b101101 -!
b101110 -!
b101111 -!
b110000 -!
b110001 -!
b110010 -!
b110011 -!
b110100 -!
b110101 -!
b110110 -!
b110111 -!
b111000 -!
b111001 -!
b111010 -!
b111011 -!
b111100 -!
b111101 -!
b111110 -!
b111111 -!
b1000000 -!
b1000001 -!
b1000010 -!
b1000011 -!
b1000100 -!
b1000101 -!
b1000110 -!
b1000111 -!
b1001000 -!
b1001001 -!
b1001010 -!
b1001011 -!
b1001100 -!
b1001101 -!
b1001110 -!
b1001111 -!
b1010000 -!
b1010001 -!
b1010010 -!
b1010011 -!
b1010100 -!
b1010101 -!
b1010110 -!
b1010111 -!
b1011000 -!
b1011001 -!
b1011010 -!
b1011011 -!
b1011100 -!
b1011101 -!
b1011110 -!
b1011111 -!
b1100000 -!
b1100001 -!
b1100010 -!
b1100011 -!
b1100100 -!
b1100101 -!
b1100110 -!
b1100111 -!
b1101000 -!
b1101001 -!
b1101010 -!
b1101011 -!
b1101100 -!
b1101101 -!
b1101110 -!
b1101111 -!
b1110000 -!
b1110001 -!
b1110010 -!
b1110011 -!
b1110100 -!
b1110101 -!
b1110110 -!
b1110111 -!
b1111000 -!
b1111001 -!
b1111010 -!
b1111011 -!
b1111100 -!
b1111101 -!
b1111110 -!
b1111111 -!
b10000000 -!
#24
0$
0-
0j
0"!
0Q
0]
0;
0l
#36
1$
1-
1j
1"!
1Q
1]
1;
1l
#48
0$
0-
0j
0"!
0Q
0]
0;
0l
#60
1$
1-
1j
1"!
1Q
1]
1;
1l
#72
0$
0-
0j
0"!
0Q
0]
0;
0l
#84
1$
1-
1j
1"!
1Q
1]
1;
1l
#96
0$
0-
0j
0"!
0Q
0]
0;
0l
#108
1$
1-
1j
1"!
1Q
1]
1;
1l
#120
0$
0-
0j
0"!
0Q
0]
0;
0l
#132
1$
1-
1j
1"!
1Q
1]
1;
1l
#144
0$
0-
0j
0"!
0Q
0]
0;
0l
#156
1$
1-
1j
1"!
1Q
1]
1;
1l
#168
0$
0-
0j
0"!
0Q
0]
0;
0l
#180
1$
1-
1j
1"!
1Q
1]
1;
1l
#192
0$
0-
0j
0"!
0Q
0]
0;
0l
0%
0.
0k
0#!
0R
#204
1$
1-
1j
1"!
1Q
1]
1;
1l
b0 *!
1y
b1 !!
1b
1c
1d
b1 i
1^
b0 '!
b0 F
1<
0w
0v
0u
0t
0s
0r
0q
0p
#216
0$
0-
0j
0"!
0Q
b110 !
b1001 "
b11 #
b11 ,
b1001 +
b110 *
b110 I
b1001 J
b11 L
b110 N
b1001 O
b11 P
#228
1$
1-
1j
1"!
1Q
0d
bx0 g
b0 i
0^
0<
#240
0$
0-
0j
0"!
0Q
0]
0;
0l
b1111 &
1'
16
15
14
13
12
01
00
0/
1T
#252
1$
1-
1j
1"!
1Q
1]
1;
1l
1d
b1 i
1^
1<
#264
0$
0-
0j
0"!
0Q
#276
1$
1-
1j
1"!
1Q
b1 ~
b1 z
0d
b11111 g
b0 i
0^
0<
#288
0$
0-
0j
0"!
0Q
0]
0;
0l
#300
1$
1-
1j
1"!
1Q
1]
1;
1l
b10 ~
1d
b1 i
1^
1<
#312
0$
0-
0j
0"!
0Q
#324
1$
1-
1j
1"!
1Q
b11 ~
b101 z
0d
b0 i
0^
b10 o
b10 H
0<
b10 %!
#336
0$
0-
0j
0"!
0Q
0]
0;
0l
#348
1$
1-
1j
1"!
1Q
1]
1;
1l
b100 ~
1d
b1 i
1^
1<
#360
0$
0-
0j
0"!
0Q
#372
1$
1-
1j
1"!
1Q
b101 ~
b10101 z
0d
b0 i
0^
b1010 o
b1010 H
0<
b1010 %!
#384
0$
0-
0j
0"!
0Q
0]
0;
0l
#396
1$
1-
1j
1"!
1Q
1]
1;
1l
b110 ~
1d
b1 i
1^
1<
#408
0$
0-
0j
0"!
0Q
#420
1$
1-
1j
1"!
1Q
b111 ~
b1010101 z
0d
b0 i
0^
b101010 o
b101010 H
0<
b101010 %!
#432
0$
0-
0j
0"!
0Q
0]
0;
0l
#444
1$
1-
1j
1"!
1Q
1]
1;
1l
b1000 ~
b10 !!
1x
1d
b1 i
1^
1G
xE
xD
xC
xB
xA
x@
x?
x>
bx &!
1$!
1<
#456
0$
0-
0j
0"!
0Q
#468
1$
1-
1j
1"!
1Q
1n
b11 !!
0d
b0 i
0^
1:
0<
1S
#480
0$
0-
0j
0"!
0Q
0]
0;
0l
#492
1$
1-
1j
1"!
1Q
1]
1;
1l
0n
1d
b1 i
1^
0:
1<
0S
#504
0$
0-
0j
0"!
0Q
#516
1$
1-
1j
1"!
1Q
b0 ~
0d
b11 i
0^
0<
#528
0$
0-
0j
0"!
0Q
0]
0;
0l
#540
1$
1-
1j
1"!
1Q
1]
1;
1l
b1 ~
bx0 {
0E
bx0 &!
#552
0$
0-
0j
0"!
0Q
0]
0;
0l
#564
1$
1-
1j
1"!
1Q
1]
1;
1l
b10 ~
bx00 {
0D
bx00 &!
#576
0$
0-
0j
0"!
0Q
0]
0;
0l
#588
1$
1-
1j
1"!
1Q
1]
1;
1l
b11 ~
bx000 {
0C
bx000 &!
#600
0$
0-
0j
0"!
0Q
0]
0;
0l
#612
1$
1-
1j
1"!
1Q
1]
1;
1l
b100 ~
bx0000 {
0B
bx0000 &!
#624
0$
0-
0j
0"!
0Q
0]
0;
0l
#636
1$
1-
1j
1"!
1Q
1]
1;
1l
b101 ~
bx00000 {
0A
bx00000 &!
#648
0$
0-
0j
0"!
0Q
0]
0;
0l
#660
1$
1-
1j
1"!
1Q
1]
1;
1l
b110 ~
bx000000 {
0@
bx000000 &!
#672
0$
0-
0j
0"!
0Q
0]
0;
0l
#684
1$
1-
1j
1"!
1Q
1]
1;
1l
b111 ~
bx0000000 {
0?
bx0000000 &!
#696
0$
0-
0j
0"!
0Q
0]
0;
0l
#708
1$
1-
1j
1"!
1Q
1